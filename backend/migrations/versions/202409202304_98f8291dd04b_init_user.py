"""Init user

Revision ID: 98f8291dd04b
Revises: 
Create Date: 2024-09-20 23:04:38.710833

"""
from alembic import op
import bcrypt
from psycopg2 import IntegrityError
import sqlalchemy as sa

from app.users.models import User


# revision identifiers, used by Alembic.
revision = '98f8291dd04b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
  # ### commands auto generated by Alembic - please adjust! ###
  op.create_table('user',
  sa.Column('id', sa.Integer(), nullable=False),
  sa.Column('fullname', sa.String(length=120), nullable=False),
  sa.Column('email', sa.String(length=120), nullable=False),
  sa.Column('phone', sa.String(length=20), nullable=True),
  sa.Column('password', sa.String(length=80), nullable=False),
  sa.Column('country', sa.String(length=120), nullable=True),
  sa.Column('state', sa.String(length=120), nullable=True),
  sa.Column('city', sa.String(length=120), nullable=True),
  sa.Column('street', sa.String(length=120), nullable=True),
  sa.Column('address', sa.String(length=120), nullable=True),
  sa.Column('zip_code', sa.String(length=10), nullable=True),
  sa.Column('is_active', sa.Boolean(), nullable=True),
  sa.PrimaryKeyConstraint('id'),
  sa.UniqueConstraint('email')
  )
  # ### end Alembic commands ###

  bind = op.get_bind()
  session = sa.orm.Session(bind=bind)

  try:
    # Ellenőrizd, hogy létezik-e már a felhasználó
    if not session.query(User).filter_by(email='admin@carservicetracker.hu').first():
      admin_user = User(
        email='admin@carservicetracker.hu',
        fullname="Admin",
        password=bcrypt.hashpw('Passw0rd'.encode('utf-8'), bcrypt.gensalt()).decode('utf-8')
      )
      session.add(admin_user)
      session.commit()
  except IntegrityError:
    session.rollback()
    # Ha a felhasználó már létezik, nem kell újra hozzáadni
    pass
  finally:
    session.close()


def downgrade():
  # ### commands auto generated by Alembic - please adjust! ###
  op.drop_table('user')
  # ### end Alembic commands ###
